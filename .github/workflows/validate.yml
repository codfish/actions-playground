name: Validate Code

on: pull_request

jobs:
  validate:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        id: setup-node
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: troubleshooting
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          git remote -v
          git branch -a
          echo "$GITHUB_CONTEXT"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key:
            ${{ runner.os }}-node_modules-${{ steps.setup-node.outputs.node-version }}-${{
            hashFiles('**/package-lock.json') }}

      - name: semantic release dry run
        uses: docker://ghcr.io/codfish/semantic-release-action@sha256:4c0955361cf42e5ab9bb05df3a1e2a781c443f9760b63a68957689445051a2fb
        with:
          dry-run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - name: Retrieve text file
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - run:
          npm run lint:commit -- --from="origin/${{ github.base_ref }}"
          --to="origin/${{github.head_ref }}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: lint js
        run: npm run lint

      - name: lint markdown
        run: npm run lint:md

      - name: run tests
        run: npm run test

      - name: publish to npm
        id: pr-publish
        run: |
          version="0.0.0-PR-${PR}--$(echo ${SHA} | cut -c -7)"
          npm version $version --no-git-tag-version
          npm publish --access public --tag pr
          echo "::set-output name=pr_version::$version"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PR: ${{ github.event.number }}
          SHA: ${{ github.event.pull_request.head.sha }}

      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€  PR version published: `${{ steps.pr-publish.outputs.pr_version }}`'
            })
