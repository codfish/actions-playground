name: Release

on:
  push:
    branches:
      - main
      - alpha
      - beta
      - next
      - 'next-major'
      - '+([0-9])?(.{+([0-9]),x}).x'

jobs:
  release:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - shell: bash
        run: |
          echo "DOCKER_TAGS=main-${GITHUB_SHA},main,latest" >> $GITHUB_ENV;

      - name: echo DOCKER_TAGS
        shell: bash
        run: |
          echo $DOCKER_TAGS;

      - name: docker login
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
          echo "$GCR_TOKEN" | docker login ghcr.io -u codfish --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GCR_TOKEN: ${{ secrets.GCR_TOKEN }}

      - name: docker build
        run: docker build -t codfish/actions-playground:latest .

      - name: Upload Text file
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: text-file-${{ github.ref_name }}
          path: text.txt

      - run: cat Dockerfile

      - name: semantic-release
        uses: docker://ghcr.io/codfish/semantic-release-action@sha256:e97235f7e14add2994d6738df6a31a874c184e77da325688c37570dd8382e989
        id: semantic
        with:
          additional-packages: |
            ['@google/semantic-release-replace-plugin', '@semantic-release/git', 'conventional-changelog-conventionalcommits@7']
          plugins: |
            [
              '@semantic-release/commit-analyzer',
              [
                '@google/semantic-release-replace-plugin',
                {
                  'replacements': [
                    {
                      'files': ['Dockerfile'],
                      'from': 'RELEASE_VERSION=.*',
                      'to': 'RELEASE_VERSION=${nextRelease.version}'
                    },
                    {
                      'files': ['provisioning/Chart.yml'],
                      'from': 'ersion: .*',
                      'to': 'ersion: ${nextRelease.version}'
                    }
                  ]
                }
              ],
              [ '@semantic-release/git', {'assets': ['Dockerfile', 'provisioning/Chart.yml']} ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig": {
                    "types": [
                      { type: 'feat', section: 'Features', hidden: false },
                      { type: 'fix', section: 'Bug Fixes', hidden: false },
                      { type: 'perf', section: 'Performance Improvements', hidden: false },
                      { type: 'revert', section: 'Reverts', hidden: false },
                      { type: 'docs', section: 'Other Updates', hidden: false },
                      { type: 'style', section: 'Other Updates', hidden: false },
                      { type: 'chore', section: 'Other Updates', hidden: false },
                      { type: 'refactor', section: 'Other Updates', hidden: false },
                      { type: 'test', section: 'Other Updates', hidden: false },
                      { type: 'build', section: 'Other Updates', hidden: false },
                      { type: 'ci', section: 'Other Updates', hidden: false }
                    ]
                  }
                }
              ],
              '@semantic-release/npm',
              '@semantic-release/github'
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Dump semantic outputs
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          echo "Outputs:\n"
          echo "$SEMANTIC_OUTPUTS"
          echo "\n-----\n\nEnvironment Variables:\n"
          echo "NEW_RELEASE_PUBLISHED: $NEW_RELEASE_PUBLISHED"
          echo "RELEASE_VERSION: $RELEASE_VERSION"
          echo "RELEASE_MAJOR: $RELEASE_MAJOR"
          echo "RELEASE_MINOR: $RELEASE_MINOR"
          echo "RELEASE_PATCH: $RELEASE_PATCH"
          echo "RELEASE_NOTES: $RELEASE_NOTES"
          echo "RELEASE_TYPE: $RELEASE_TYPE"
          echo "RELEASE_CHANNEL: $RELEASE_CHANNEL"
          echo "RELEASE_GIT_HEAD: $RELEASE_GIT_HEAD"
          echo "RELEASE_GIT_TAG: $RELEASE_GIT_TAG"
          echo "RELEASE_NAME: $RELEASE_NAME"
        env:
          SEMANTIC_OUTPUTS: ${{ toJson(steps.semantic.outputs) }}

      - shell: bash
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          echo "DOCKER_TAGS=${DOCKER_TAGS},${RELEASE_VERSION}" >> $GITHUB_ENV;

      - name: echo DOCKER_TAGS
        shell: bash
        run: |
          echo $DOCKER_TAGS;

      - name: push docker images to dockerhub & GCR
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          docker tag codfish/actions-playground ghcr.io/codfish/actions-playground:latest
          docker tag codfish/actions-playground codfish/actions-playground:$VERSION_TAG
          docker tag codfish/actions-playground codfish/actions-playground:$MAJOR_TAG
          docker tag codfish/actions-playground ghcr.io/codfish/actions-playground:$VERSION_TAG
          docker tag codfish/actions-playground ghcr.io/codfish/actions-playground:$MAJOR_TAG

          docker push codfish/actions-playground:latest
          docker push codfish/actions-playground:$VERSION_TAG
          docker push codfish/actions-playground:$MAJOR_TAG
          docker push ghcr.io/codfish/actions-playground:latest
          docker push ghcr.io/codfish/actions-playground:$VERSION_TAG
          docker push ghcr.io/codfish/actions-playground:$MAJOR_TAG
        env:
          VERSION_TAG: v${{ steps.semantic.outputs.release-version }}
          MAJOR_TAG: v${{ steps.semantic.outputs.release-major }}
#      - name: build docs
#        run: |
#          npm ci --no-save
#          npm run build:docs
#          rm ./docs/.gitignore
#        env:
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
# does not work...
# Error: The deploy step encountered an error: The process '/usr/bin/git' failed with exit code 128 ❌
# Deployment failed! ❌
# ::set-output name=deployment-status::failed
#
# - name: deploy documentation
#   uses: jamesives/github-pages-deploy-action@4.1.0
#   with:
#     branch: gh-pages
#     folder: docs
