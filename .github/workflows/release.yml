name: Release

on:
  push:
    branches:
      - main
      - alpha
      - beta
      - next
      - 'next-major'
      - '+([0-9])?(.{+([0-9]),x}).x'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: docker login
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
          echo "$GCR_TOKEN" | docker login ghcr.io -u codfish --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GCR_TOKEN: ${{ secrets.GCR_TOKEN }}

      - name: docker build
        run: docker build -t codfish/actions-playground:latest .

      - name: semantic release dry run
        uses: docker://ghcr.io/codfish/semantic-release-action:v1
        id: semantic-dry-run
        with:
          dry_run: true
          branches: |
            [
              'main',
              'next',
              'next-major',
              {name: 'beta', prerelease: true},
              {name: 'alpha', prerelease: true}
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Dump semantic outputs
        if: steps.semantic-dry-run.outputs.new-release-published == 'true'
        run: echo "$SEMANTIC_OUTPUTS"
        env:
          SEMANTIC_OUTPUTS: ${{ toJson(steps.semantic-dry-run.outputs) }}

      - name: semantic release
        uses: docker://ghcr.io/codfish/semantic-release-action:v1
        id: semantic
        with:
          branches: |
            ['main', 'next', 'next-major', {name: 'beta', prerelease: true}, {name: 'alpha', prerelease: true}]
          additional_packages: |
            ['@google/semantic-release-replace-plugin', '@semantic-release/git']
          plugins: |
            [
              '@semantic-release/commit-analyzer',
              [
                '@google/semantic-release-replace-plugin',
                {
                  'replacements': [
                    {
                      'files': ['Dockerfile'],
                      'from': 'RELEASE_VERSION=.*',
                      'to': 'RELEASE_VERSION=${nextRelease.version}',
                      'results': [
                        {
                          'file': 'Dockerfile',
                          'hasChanged': true,
                          'numMatches': 1,
                          'numReplacements': 1
                        }
                      ],
                      'countMatches': true
                    }
                  ]
                }
              ],
              [
                '@semantic-release/git',
                {
                  'assets': ['Dockerfile'],
                  'message': 'chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}'
                }
              ],
              '@semantic-release/release-notes-generator',
              '@semantic-release/npm',
              '@semantic-release/github'
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: push docker images to dockerhub & GCR
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          docker tag codfish/actions-playground ghcr.io/codfish/actions-playground:latest
          docker tag codfish/actions-playground codfish/actions-playground:$VERSION_TAG
          docker tag codfish/actions-playground codfish/actions-playground:$MAJOR_TAG
          docker tag codfish/actions-playground ghcr.io/codfish/actions-playground:$VERSION_TAG
          docker tag codfish/actions-playground ghcr.io/codfish/actions-playground:$MAJOR_TAG

          docker push codfish/actions-playground:latest
          docker push codfish/actions-playground:$VERSION_TAG
          docker push codfish/actions-playground:$MAJOR_TAG
          docker push ghcr.io/codfish/actions-playground:latest
          docker push ghcr.io/codfish/actions-playground:$VERSION_TAG
          docker push ghcr.io/codfish/actions-playground:$MAJOR_TAG
        env:
          VERSION_TAG: v${{ steps.semantic.outputs.release-version }}
          MAJOR_TAG: v${{ steps.semantic.outputs.release-major }}

      - name: build docs
        run: |
          npm ci --no-save
          npm run build:docs
          rm ./docs/.gitignore
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # does not work...
      # Error: The deploy step encountered an error: The process '/usr/bin/git' failed with exit code 128 ❌
      # Deployment failed! ❌
      # ::set-output name=deployment-status::failed
      #
      # - name: deploy documentation
      #   uses: jamesives/github-pages-deploy-action@4.1.0
      #   with:
      #     branch: gh-pages
      #     folder: docs
