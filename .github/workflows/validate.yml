name: Validate Code

on: pull_request

jobs:
  validate:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Install pnpm'
        id: pnpm-setup
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Dump pnpm outputs
        env:
          PNPM_CONTEXT: ${{ toJson(steps.pnpm-setup.outputs) }}
        run: |
          echo "$PNPM_CONTEXT"
          echo "PNPM_HOME: $PNPM_HOME"

      - uses: actions/setup-node@v5
        id: setup-node
        with:
          cache: 'pnpm'
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: troubleshooting
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          git remote -v
          git branch -a
          echo "$GITHUB_CONTEXT"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key:
            ${{ runner.os }}-node_modules-${{ steps.setup-node.outputs.node-version }}-${{
            hashFiles('**/pnpm-lock.yaml') }}

      - name: install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: semantic release dry run
        uses: codfish/semantic-release-action@pnpm
        with:
          additional-packages: |
            ['@google/semantic-release-replace-plugin', '@semantic-release/git', 'conventional-changelog-conventionalcommits@7']
          dry-run: true
          pnpm-dest: ${{ steps.pnpm-setup.outputs.dest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Retrieve text file
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - run:
          pnpm lint:commit -- --from="origin/${{ github.base_ref }}"
          --to="origin/${{github.head_ref }}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: lint js
        run: pnpm lint

      - name: lint markdown
        run: pnpm lint:md

      - name: run tests
        run: pnpm test
